{"ast":null,"code":"var _jsxFileName = \"/Volumes/Official/oss/naveenda.github.io/src/components/providers.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from \"react\";\nvar ThemeContext = /*#__PURE__*/React.createContext(\"light\");\nexport function ThemeProvider(_ref) {\n  _s();\n\n  var _global$window;\n\n  var children = _ref.children;\n\n  var _useState = useState(((_global$window = global.window) === null || _global$window === void 0 ? void 0 : _global$window.__theme) || \"light\"),\n      theme = _useState[0],\n      setTheme = _useState[1];\n\n  var toggleTheme = function toggleTheme() {\n    global.window.__setPreferredTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  useEffect(function () {\n    global.window.__onThemeChange = setTheme;\n  }, []);\n  return __jsx(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      toggleTheme: toggleTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n_s(ThemeProvider, \"wJjp26xA12svpjBC1HewaORVYD4=\");\n\n_c = ThemeProvider;\nexport var useTheme = function useTheme() {\n  _s2();\n\n  return useContext(ThemeContext);\n};\n\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/Volumes/Official/oss/naveenda.github.io/src/components/providers.js"],"names":["React","useState","useEffect","useContext","ThemeContext","createContext","ThemeProvider","children","global","window","__theme","theme","setTheme","toggleTheme","__setPreferredTheme","__onThemeChange","useTheme"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,IAAMC,YAAY,gBAAGJ,KAAK,CAACK,aAAN,CAAoB,OAApB,CAArB;AAEA,OAAO,SAASC,aAAT,OAAqC;AAAA;;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBAChBN,QAAQ,CAAC,mBAAAO,MAAM,CAACC,MAAP,kEAAeC,OAAf,KAA0B,OAA3B,CADQ;AAAA,MACnCC,KADmC;AAAA,MAC5BC,QAD4B;;AAE1C,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBL,IAAAA,MAAM,CAACC,MAAP,CAAcK,mBAAd,CAAkCH,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAA/D;AACD,GAFD;;AAIAT,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,MAAM,CAACC,MAAP,CAAcM,eAAd,GAAgCH,QAAhC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAALA,KAAF;AAASE,MAAAA,WAAW,EAAXA;AAAT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QADH,CADF;AAKD;;GAfeD,a;;KAAAA,a;AAiBhB,OAAO,IAAMU,QAAQ,GAAG,SAAXA,QAAW;AAAA;;AAAA,SAAMb,UAAU,CAACC,YAAD,CAAhB;AAAA,CAAjB;;IAAMY,Q","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\n\nconst ThemeContext = React.createContext(\"light\");\n\nexport function ThemeProvider({ children }) {\n  const [theme, setTheme] = useState(global.window?.__theme || \"light\");\n  const toggleTheme = () => {\n    global.window.__setPreferredTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  useEffect(() => {\n    global.window.__onThemeChange = setTheme;\n  }, []);\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport const useTheme = () => useContext(ThemeContext);\n"]},"metadata":{},"sourceType":"module"}