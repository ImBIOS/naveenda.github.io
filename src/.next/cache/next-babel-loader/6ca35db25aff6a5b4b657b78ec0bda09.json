{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Volumes/Official/oss/naveenda.github.io/src/components/providers.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { ThemeProvider } from \"styled-components\";\nimport useDarkMode from \"use-dark-mode\";\nvar Theme = React.createContext();\n\nvar Provider = function Provider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useDarkMode = useDarkMode(false, {\n    storageKey: null,\n    onChange: null\n  }),\n      value = _useDarkMode.value;\n\n  var theme = value ? darkTheme : lightTheme;\n  return __jsx(Theme.Provider, {\n    value: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }\n  }, children);\n};\n\n_s(Provider, \"cPmFQZsFRKwhCDQXDLunoMImu/Q=\", false, function () {\n  return [useDarkMode];\n});\n\n_c = Provider;\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["/Volumes/Official/oss/naveenda.github.io/src/components/providers.js"],"names":["lightTheme","darkTheme","ThemeProvider","useDarkMode","Theme","React","createContext","Provider","children","storageKey","onChange","value","theme"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,SAAtC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAMC,KAAK,GAAGC,KAAK,CAACC,aAAN,EAAd;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,qBACfL,WAAW,CAAC,KAAD,EAAQ;AAAEM,IAAAA,UAAU,EAAE,IAAd;AAAoBC,IAAAA,QAAQ,EAAE;AAA9B,GAAR,CADI;AAAA,MACzBC,KADyB,gBACzBA,KADyB;;AAEjC,MAAMC,KAAK,GAAGD,KAAK,GAAGV,SAAH,GAAeD,UAAlC;AACA,SAAO,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEY,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BJ,QAA/B,CAAP;AACD,CAJD;;GAAMD,Q;UACcJ,W;;;KADdI,Q;AAMN,eAAeA,QAAf","sourcesContent":["import { lightTheme, darkTheme } from \"./theme\";\nimport { ThemeProvider } from \"styled-components\";\nimport useDarkMode from \"use-dark-mode\";\n\nconst Theme = React.createContext();\n\nconst Provider = ({ children }) => {\n  const { value } = useDarkMode(false, { storageKey: null, onChange: null });\n  const theme = value ? darkTheme : lightTheme;\n  return <Theme.Provider value={theme}>{children}</Theme.Provider>;\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}